#Create Database demo;
#Create schema demo;
#drop schema demo;
#CREATE TABLE `user` ( `userid` INT NOT NULL, `username` VARCHAR(50) NOT NULL,  PRIMARY KEY (`userid`));
#ALTER TABLE user CHANGE COLUMN `username` `user` VARCHAR(50) NOT NULL ;
#ALTER TABLE `user` ADD COLUMN `salary` INT;

#drop table user;

#ADD data
Insert into user values(1, 'Rahul');
#Read data
Select * from user;
#Modify
#Update user set username='tomer';
#Update user set username='tomer' where username = 'Brijesh';
#remove
#Delete from user;

# filter
select * from user Where userid = 2;
#Update user set username='tomer' where userid = '4';
#Delete from user Where userid = 2;

#wild card filter
select * from user where username like 'rah%';
select * from user where username like '%sh';
select * from user where username  like '%h%';
select * from user where username not like '%h%';

#Sorting
Select * from user order by username desc;

CREATE TABLE `demo`.`posts` (
  `postid` INT NOT NULL,
  `post` VARCHAR(45) NULL,
  `userid` INT NOT NULL,
  PRIMARY KEY (`postid`),
  UNIQUE INDEX `postid_UNIQUE` (`postid` ASC) VISIBLE,
  INDEX `userid_idx` (`userid` ASC) VISIBLE,
  CONSTRAINT `userid`
    FOREIGN KEY (`userid`)
    REFERENCES `demo`.`user` (`userid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

    Insert into posts values(1,"hi",1);
     Insert into posts values(3,"anotherhi",1);
    insert into posts values(2,"bye", 2);
    
    
    select u.username, p.post from user u, posts p where u.userid = p.userid and (u.userid =1 or u.userid =3);
    select u.username,p.post from user u inner join posts p on p.userid = u.userid where u.userid =2;
    select u.username,p.post from user u left join posts p on p.userid = u.userid

Select us.username,p.userid as postuser, p.post,c.comment,c.userid 
from user us, posts p inner join comments c on p.postid= c.postid 
where c.comment like '%NO%' and c.userid in (
	select c.userid from comments c inner join user u on c.userid= u.userid where u.userid<10
    ) 
and us.userid = c.userid order by us.username

UNION full join
intersection : inner join


select * into userbackp from comments


trigger
function
storedproc
view


copy a table:
create table order_archived as 
select * from orders

subquerry example in a insert statement(from youtube)
insert into order_archived ()
select * from orders where order_date < '2019-01-01'
